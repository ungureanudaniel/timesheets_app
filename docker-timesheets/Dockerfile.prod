###########
# BUILDER #
###########

# Pull official base image for Python 3.10.8
FROM python:3.10.8-slim-buster as builder

# Set work directory
WORKDIR /usr/src/docker-timesheets

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc

# Lint code with Flake8
RUN pip install --upgrade pip
RUN pip install flake8==6.0.0
COPY . /usr/src/docker-timesheets/
RUN flake8 --ignore=E501,F401,F403,F405,F841 .

# Install Python dependencies and create wheels
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/docker-timesheets/wheels -r requirements.txt


#########
# FINAL #
#########

# Pull official base image for Python 3.10.8
FROM python:3.10.8-slim-buster

# Create directory for the app user
RUN mkdir -p /home/docker-timesheets

# Create the app user
RUN addgroup --system daniel && adduser --system --group daniel

# Create the appropriate directories
ENV HOME=/home/docker-timesheets
ENV APP_HOME=/home/docker-timesheets/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# Copy Python wheels and requirements from the builder stage
COPY --from=builder /usr/src/docker-timesheets/wheels /wheels
COPY --from=builder /usr/src/docker-timesheets/requirements.txt .

# Install the Python dependencies
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# Copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g' $APP_HOME/entrypoint.prod.sh
RUN chmod +x $APP_HOME/entrypoint.prod.sh

# Copy the project source code
COPY . $APP_HOME

# Change ownership of the files to the docker_timesheets user
RUN chown -R docker-timesheets:docker-timesheets $APP_HOME

# Change to the app user
USER daniel

# Run entrypoint.prod.sh
ENTRYPOINT ["/home/docker-timesheets/web/entrypoint.prod.sh"]
